{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","defaultProps","aboutTitle","TextForm","useState","text","setText","heading","value","onChange","event","target","style","backgroundColor","color","rows","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","charAt","length","Alert","alert","word","lower","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","setInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.93959d2d.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom';\r\n\r\nexport default function Navbar(props){\r\n    return(\r\n<nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.aboutTitle}</Link>\r\n        </li>\r\n        */}\r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    );\r\n}\r\n\r\n// HERE WE CONFORM THAT WE ONLY NEEDED STRING TYPE OR NUMBER TYPE PROP ITS A MENDATARY\r\nNavbar.propTypes= {title : PropTypes.string,\r\n                    aboutTitle : PropTypes.string}\r\n\r\n\r\n// IF WE WANT A DEFAULT VALUE OF THE THE PROPS ITS LIKE THAT\r\n\r\nNavbar.defaultProps = {\r\n    title : \"please enter the title\",\r\n    aboutTitle : \"please enter the about title\"\r\n}","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props){\r\n    const [text,setText] = useState(\"\")\r\n    //text=\"new text\"   //wrong way to change the state\r\n    //setText(\"kiya krna h\"); // correct way to change the state\r\n\r\n    const handleUpClick=() =>{\r\n        // console.log(\"UPPER CASE CHANGED\")\r\n        setText(text.toUpperCase())\r\n        props.showAlert(\"Converted to uppercase\",\"success\")\r\n    }\r\n\r\n    const handleLowerClick=() =>{\r\n        // console.log(\"UPPER CASE CHANGED\")\r\n        setText(text.toLowerCase())\r\n    }\r\n\r\n    const handleCopyClick=() =>{\r\n        var text =document.getElementById(\"myBox\")\r\n        // console.log(\"UPPER CASE CHANGED\")\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value)\r\n    }\r\n\r\n    const handleSpacesClick=() =>{\r\n        // console.log(\"UPPER CASE CHANGED\")\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n    }\r\n\r\n    const handleStoreClick=() =>{\r\n        // console.log(\"UPPER CASE CHANGED\")\r\n        setText(text.charAt(0))\r\n    }\r\n\r\n    const handleClearClick=() =>{\r\n        // console.log(\"UPPER CASE CHANGED\")\r\n        setText(\"\")\r\n    }\r\n\r\n\r\n\r\n    // it is uses most  of the cases of input box when we have to write the text.\r\n    const handleOnChange = (event) =>{\r\n        // console.log(\"changes occur\")\r\n        setText(event.target.value)\r\n    }\r\n    return(\r\n        <>\r\n        <div className=\"container\"  >\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='light'?'white':'grey',color: props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpClick} >Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleLowerClick} >Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleCopyClick} >Copy Text</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleSpacesClick} >Remove Spaces</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleStoreClick} >Store Text</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleClearClick} >Clear Text</button>\r\n        </div>\r\n        <div className=\"container my-3\">\r\n            <h2>Your text Summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p> {0.008 *text.split(\" \").length } Minutes read</p>\r\n            <h2>PREVIEW OF TEXT</h2>\r\n            <p>{text.length>0?text:\"Enter something to preview it here\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props){\r\n    const capitalize =(word)=>{\r\n        const lower =word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\nreturn(\r\n  props.alert &&  <div className={`alert alert-${props.alert.type} alert-dismissible fade show`}>\r\n    <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n  \r\n    </div>\r\n)\r\n}","import React, { useState } from 'react'\n\nimport Navbar from './components/Navbar'\nimport './App.css';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\nfunction App() {\n\n  const[mode,setMode] = useState(\"light\") //whether the dark mode is enable or not\n \n  const [alert, setAlert]=useState(null)\n\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },3000)\n  }\n  // toggle mode is start\n const toggleMode = () => {\n   if(mode === 'light'){\n     setMode('dark');\n     document.body.style.backgroundColor=\"black\";\n     document.body.style.color=\"white\";\n     showAlert(\"Dark mode has been enabled\",\"success\")\n     document.title = \"TextUtils - Darkmode\";\n     setInterval(()=>{\n       document.title ='TextUtils is Amazing mode'\n     },2000);\n     setInterval(()=>{\n      document.title ='Install TextUtils'\n    },1500);\n   }\n   else{\n     setMode ('light');\n     document.body.style.backgroundColor=\"white\";\n     document.body.style.color=\"black\";\n     showAlert(\"Light mode has been enabled\",\"warning\")\n     \n   }\n }\n\n  \n  return (\n    <> \n       {/* <Router> */}\n        <Navbar title=\"TextUtils\" aboutTitle=\"About\" mode={mode} toggleMode={toggleMode}/>\n        <Alert alert={alert}/>\n        <div className=\"container my-3\">\n        {/* <Switch> */}\n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n         \n          {/* <Route exact path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading=\"Here we analize the text  \"mode={mode}/>\n          {/* </Route>\n        </Switch> */}\n       \n        </div>\n        {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}